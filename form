import React, { useState } from 'react';

const SignupForm = () => {
  const [formData, setFormData] = useState({
    name: '',
    email: '',
    gender: 'male',
    phoneNumber: '',
    password: '',
  });

  const [errors, setErrors] = useState({});
  const [successMessage, setSuccessMessage] = useState('');

  const handleInputChange = (event) => {
    const { name, value } = event.target;
    setFormData({ ...formData, [name]: value });
    setErrors({ ...errors, [name]: '' });
  };

  const validateForm = () => {
    const newErrors = {};

    if (!formData.name) {
      newErrors.name = 'All fields are mandatory';
    } else if (!/^[a-zA-Z0-9\s]+$/.test(formData.name)) {
      newErrors.name = 'Name is not alphanumeric';
    }

    if (!formData.email) {
      newErrors.email = 'All fields are mandatory';
    } else if (!formData.email.includes('@')) {
      newErrors.email = 'Email must contain @';
    }

    if (!formData.phoneNumber) {
      newErrors.phoneNumber = 'All fields are mandatory';
    } else if (!/^\d+$/.test(formData.phoneNumber)) {
      newErrors.phoneNumber = 'Phone Number must contain only numbers';
    }

    if (!formData.password) {
      newErrors.password = 'All fields are mandatory';
    } else if (formData.password.length < 6) {
      newErrors.password = 'Password must contain at least 6 letters';
    }

    if (!['male', 'female', 'other'].includes(formData.gender)) {
      newErrors.gender = 'Please identify as male, female, or others';
    }

    setErrors(newErrors);
    return Object.keys(newErrors).length === 0;
  };

  const handleSubmit = (event) => {
    event.preventDefault();

    if (validateForm()) {
      const username = formData.email.split('@')[0];
      setSuccessMessage(`Hello ${username}`);
    }
  };

  return (
    <div>
      <form onSubmit={handleSubmit}>
        <div>
          <label>Name:</label>
          <input
            type="text"
            name="name"
            value={formData.name}
            onChange={handleInputChange}
            data-testid="name"
          />
          {errors.name && <p>{errors.name}</p>}
        </div>

        <div>
          <label>Email:</label>
          <input
            type="email"
            name="email"
            value={formData.email}
            onChange={handleInputChange}
            data-testid="email"
          />
          {errors.email && <p>{errors.email}</p>}
        </div>

        <div>
          <label>Gender:</label>
          <select
            name="gender"
            value={formData.gender}
            onChange={handleInputChange}
            data-testid="gender"
          >
            <option value="male">Male</option>
            <option value="female">Female</option>
            <option value="other">Other</option>
          </select>
          {errors.gender && <p>{errors.gender}</p>}
        </div>

        <div>
          <label>Phone Number:</label>
          <input
            type="text"
            name="phoneNumber"
            value={formData.phoneNumber}
            onChange={handleInputChange}
            data-testid="phoneNumber"
          />
          {errors.phoneNumber && <p>{errors.phoneNumber}</p>}
        </div>

        <div>
          <label>Password:</label>
          <input
            type="password"
            name="password"
            value={formData.password}
            onChange={handleInputChange}
            data-testid="password"
          />
          {errors.password && <p>{errors.password}</p>}
        </div>

        <button type="submit" data-testid="submit">
          Submit
        </button>
      </form>

      {successMessage && <p>{successMessage}</p>}
    </div>
  );
};

export default SignupForm;

